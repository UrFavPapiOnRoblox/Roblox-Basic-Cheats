-- // Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- // Variables
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- // UI Setup for "Made by your fav papi"
local screenGui1 = Instance.new("ScreenGui", playerGui)
screenGui1.ResetOnSpawn = false

local textLabel = Instance.new("TextLabel", screenGui1)
textLabel.Size = UDim2.new(0.5, 0, 0.1, 0)
textLabel.Position = UDim2.new(0.25, 0, 0.45, 0)
textLabel.BackgroundTransparency = 0.3
textLabel.BackgroundColor3 = Color3.fromRGB(75, 0, 130) -- Deep Purple background
textLabel.TextTransparency = 1
textLabel.TextStrokeTransparency = 0
textLabel.TextColor3 = Color3.fromRGB(218, 112, 214) -- Orchid text color
textLabel.Font = Enum.Font.GothamBlack
textLabel.TextSize = 42
textLabel.TextWrapped = true
textLabel.RichText = true
textLabel.Text = "Made by UrFavPapiOnRoblox ;) <3"

-- Add Rounded Corners
local uiCorner = Instance.new("UICorner", textLabel)
uiCorner.CornerRadius = UDim.new(0.3, 0) -- Adjust for roundness

-- // Tween Animations for "Made by your fav papi"
local fadeIn = TweenService:Create(textLabel, TweenInfo.new(1), {TextTransparency = 0, BackgroundTransparency = 0.1})
local fadeOut = TweenService:Create(textLabel, TweenInfo.new(1), {TextTransparency = 1, BackgroundTransparency = 1})

-- // Sequence for "Made by your fav papi"
fadeIn:Play()
fadeIn.Completed:Wait()
wait(6)
fadeOut:Play()
fadeOut.Completed:Wait()
screenGui1:Destroy()

-- // UI Setup for MaterialLua UI (Main UI)
local screenGui2 = Instance.new("ScreenGui", playerGui)
screenGui2.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", screenGui2)
mainFrame.Size = UDim2.new(0, 240, 0, 400)
mainFrame.Position = UDim2.new(0.5, -120, 0.2, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(80, 40, 160)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

-- Title
local titleBar = Instance.new("TextLabel", mainFrame)
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(60, 30, 120)
titleBar.Text = "MaterialLua UI"
titleBar.TextColor3 = Color3.new(1, 1, 1)
titleBar.Font = Enum.Font.GothamBold
titleBar.TextSize = 18

-- Player List
local playerList = Instance.new("ScrollingFrame", mainFrame)
playerList.Size = UDim2.new(1, 0, 0, 120)
playerList.Position = UDim2.new(0, 0, 0, 35)
playerList.CanvasSize = UDim2.new(0, 0, 1, 0)
playerList.BackgroundColor3 = Color3.fromRGB(100, 50, 200)
playerList.ScrollBarThickness = 6

local listLayout = Instance.new("UIListLayout", playerList)
listLayout.Padding = UDim.new(0, 5)

-- Orbit Toggle
local orbitToggle = Instance.new("TextButton", mainFrame)
orbitToggle.Size = UDim2.new(0.9, 0, 0, 30)
orbitToggle.Position = UDim2.new(0.05, 0, 0.55, 0)
orbitToggle.Text = "Orbit: OFF"
orbitToggle.BackgroundColor3 = Color3.fromRGB(160, 40, 80)
orbitToggle.TextColor3 = Color3.new(1, 1, 1)

-- Orbit Pattern Selection
local orbitPatternButton = Instance.new("TextButton", mainFrame)
orbitPatternButton.Size = UDim2.new(0.9, 0, 0, 30)
orbitPatternButton.Position = UDim2.new(0.05, 0, 0.65, 0)
orbitPatternButton.Text = "Orbit Pattern: Circular"
orbitPatternButton.BackgroundColor3 = Color3.fromRGB(120, 40, 100)
orbitPatternButton.TextColor3 = Color3.new(1, 1, 1)

-- // Variables for Orbit
local rotating = false
local selectedPlayer = nil
local orbitSpeed = 10
local orbitRadius = 5
local hitboxSize = 6
local orbitPattern = "Circular" -- Default orbit pattern
local humanoidRootPart = player.Character:WaitForChild("HumanoidRootPart")

-- Orbit Patterns
local patterns = {
    Circular = function(target)
        local angle = tick() * orbitSpeed
        return Vector3.new(math.cos(angle) * orbitRadius, 2, math.sin(angle) * orbitRadius)
    end,
    Square = function(target)
        local angle = tick() * orbitSpeed
        local offset = math.sin(angle) * orbitRadius
        return Vector3.new(offset, 2, offset)
    end,
    Random = function(target)
        local offsetX = math.random(-orbitRadius, orbitRadius)
        local offsetZ = math.random(-orbitRadius, orbitRadius)
        return Vector3.new(offsetX, 2, offsetZ)
    end
}

-- Function to Update Player List
local function updatePlayerList()
    for _, v in pairs(playerList:GetChildren()) do
        if v:IsA("TextButton") then v:Destroy() end
    end

    for _, targetPlayer in pairs(Players:GetPlayers()) do
        if targetPlayer ~= player then
            local button = Instance.new("TextButton", playerList)
            button.Size = UDim2.new(1, 0, 0, 25)
            button.Text = targetPlayer.Name
            button.BackgroundColor3 = Color3.fromRGB(120, 60, 200)
            button.TextColor3 = Color3.new(1, 1, 1)

            button.MouseButton1Click:Connect(function()
                selectedPlayer = targetPlayer
                print("Selected:", selectedPlayer.Name)
            end)
        end
    end
end

updatePlayerList()
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)

-- Orbit Function
local function startRotating()
    while rotating and selectedPlayer do
        local target = selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart")
        if target then
            local offset = patterns[orbitPattern](target)
            humanoidRootPart.CFrame = CFrame.new(target.Position + offset, target.Position)
        end
        RunService.Heartbeat:Wait()
    end
end

orbitToggle.MouseButton1Click:Connect(function()
    rotating = not rotating
    orbitToggle.Text = rotating and "Orbit: ON" or "Orbit: OFF"
    orbitToggle.BackgroundColor3 = rotating and Color3.fromRGB(40, 160, 80) or Color3.fromRGB(160, 40, 80)
    if rotating then startRotating() end
end)

-- Change Orbit Pattern
orbitPatternButton.MouseButton1Click:Connect(function()
    if orbitPattern == "Circular" then
        orbitPattern = "Square"
        orbitPatternButton.Text = "Orbit Pattern: Square"
    elseif orbitPattern == "Square" then
        orbitPattern = "Random"
        orbitPatternButton.Text = "Orbit Pattern: Random"
    else
        orbitPattern = "Circular"
        orbitPatternButton.Text = "Orbit Pattern: Circular"
    end
end)

-- Sliders for Settings
local function createSlider(labelText, position, minValue, maxValue, defaultValue, callback)
    local frame = Instance.new("Frame", mainFrame)
    frame.Size = UDim2.new(1, -40, 0, 10)
    frame.Position = position
    frame.BackgroundColor3 = Color3.fromRGB(140, 60, 200)

    local label = Instance.new("TextLabel", mainFrame)
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = position - UDim2.new(0, 0, 0.05, 0)
    label.Text = labelText .. ": " .. defaultValue
    label.TextColor3 = Color3.new(1, 1, 1)
    label.BackgroundTransparency = 1

    local button = Instance.new("TextButton", frame)
    button.Size = UDim2.new(0, 10, 1, 0)
    button.Position = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 0, 0)
    button.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    button.Text = ""

    button.MouseButton1Down:Connect(function()
        local dragging = true
        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local percent = math.clamp((input.Position.X - frame.AbsolutePosition.X) / frame.AbsoluteSize.X, 0, 1)
                local newValue = math.floor(minValue + percent * (maxValue - minValue))
                label.Text = labelText .. ": " .. newValue
                callback(newValue)
                button.Position = UDim2.new(percent, 0, 0, 0)
            end
        end)
        UserInputService.InputEnded:Connect(function() dragging = false end)
    end)

    return button
end

createSlider("Speed", UDim2.new(0.05, 0, 0.75, 0), 2, 20, orbitSpeed, function(v) orbitSpeed = v end)
createSlider("Radius", UDim2.new(0.05, 0, 0.85, 0), 3, 15, orbitRadius, function(v) orbitRadius = v end)
createSlider("Hitbox", UDim2.new(0.05, 0, 0.95, 0), 2, 10, hitboxSize, function(v) hitboxSize = v end)
